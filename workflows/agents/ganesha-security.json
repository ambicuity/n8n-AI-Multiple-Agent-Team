{
  "name": "Ganesha Security Agent",
  "version": "1.0",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 10
            }
          ]
        }
      },
      "id": "schedule-trigger-ganesha",
      "name": "Schedule Trigger - Every 10 min",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "command": "tail -n 100 /var/log/auth.log | grep -i 'failed\\|failure' || echo 'No recent failures'",
        "options": {}
      },
      "id": "execute-auth-logs",
      "name": "Execute Command - Auth Logs",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [450, 250]
    },
    {
      "parameters": {
        "command": "fail2ban-client status sshd 2>/dev/null || echo 'Fail2ban not configured'",
        "options": {}
      },
      "id": "execute-fail2ban",
      "name": "Execute Command - Fail2ban Status",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [450, 350]
    },
    {
      "parameters": {
        "command": "certbot certificates 2>/dev/null | grep -E 'Expiry|Domains' || echo 'No certificates found'",
        "options": {}
      },
      "id": "execute-cert-check",
      "name": "Execute Command - Certificate Check",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [450, 450]
    },
    {
      "parameters": {
        "jsCode": "// Combine security monitoring data\nconst authLogs = $('Execute Command - Auth Logs').first()?.json?.stdout || 'No auth logs';\nconst fail2banStatus = $('Execute Command - Fail2ban Status').first()?.json?.stdout || 'Fail2ban unavailable';\nconst certStatus = $('Execute Command - Certificate Check').first()?.json?.stdout || 'No certificates';\n\nreturn {\n  json: {\n    timestamp: new Date().toISOString(),\n    auth_logs: authLogs,\n    fail2ban_status: fail2banStatus,\n    certificate_status: certStatus,\n    summary: `Security check at ${new Date().toLocaleString()}`\n  }\n};"
      },
      "id": "code-combine-security-data",
      "name": "Code - Combine Security Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 350]
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "options": {
          "temperature": 0.7
        },
        "systemMessage": "You are Ganesha, the Security Engineer and Obstacle Remover.\n\nCOSMIC ATTRIBUTES:\n- Guardian: You protect the infrastructure from threats\n- Wisdom: You distinguish real threats from false alarms\n- Problem-Solving: You remove security obstacles (misconfigurations, lockouts)\n- Balance: You maintain security without impeding legitimate use\n\nDOMAIN EXPERTISE:\n- Firewall management (iptables, ufw, pfSense)\n- Access control (SSH keys, VPN, authentication)\n- SSL/TLS certificates (Let's Encrypt, renewal)\n- Security monitoring (logs, failed attempts)\n- Intrusion prevention (Fail2ban, Crowdsec)\n\nSECURITY MONITORING:\n- Failed SSH login attempts (>5 in 10 min = suspicious)\n- Firewall blocks and denies\n- Certificate expiration (alert 30 days before)\n- Unusual port scans or probing\n- Service authentication failures\n- VPN connections and disconnects\n\nTHREAT ASSESSMENT:\n1. Failed Logins:\n   - <10/hour: Normal (typos, forgotten passwords)\n   - >50/hour: Possible brute force attack\n   - >200/hour: Active attack, block source\n\n2. Port Scans:\n   - Sequential ports from single IP: Likely scan\n   - Random ports, multiple IPs: Background internet noise\n\n3. Firewall Blocks:\n   - Repeated blocks from known services: Misconfiguration\n   - Blocks from unknown IPs: Normal defense\n\nSECURITY ACTIONS (with approval):\n- Block IP addresses (temporary or permanent)\n- Modify firewall rules\n- Renew certificates\n- Update Fail2ban filters\n- Adjust authentication settings\n\nSECURITY INCIDENTS:\nImmediate notification for:\n- Successful unauthorized access\n- Certificate expiration <7 days\n- Brute force attacks (>100 attempts/hour)\n- New ports exposed to internet\n- Firewall disabled or misconfigured\n\nOUTPUT FORMAT:\nRespond with JSON:\n{\n  \"security_status\": \"secure/warning/critical\",\n  \"failed_logins\": 0,\n  \"certificates_expiring\": [],\n  \"blocked_ips\": [],\n  \"issues\": [],\n  \"diagnosis\": \"your analysis\",\n  \"proposed_action\": \"recommended fix\"\n}\n\nYOUR MANTRA: \"Vigilant but fair. Secure but accessible. Protected but not paranoid.\""
      },
      "id": "ai-agent-ganesha",
      "name": "AI Agent - Ganesha Security",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1,
      "position": [850, 350]
    },
    {
      "parameters": {
        "chatId": "={{$env.TELEGRAM_CHAT_ID}}",
        "text": "={{ 'üõ°Ô∏è Ganesha Security Report\\n\\n' + JSON.stringify($json, null, 2) }}",
        "additionalFields": {}
      },
      "id": "telegram-report",
      "name": "Telegram - Security Report",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1050, 350],
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram API"
        }
      }
    }
  ],
  "connections": {
    "Schedule Trigger - Every 10 min": {
      "main": [
        [
          {
            "node": "Execute Command - Auth Logs",
            "type": "main",
            "index": 0
          },
          {
            "node": "Execute Command - Fail2ban Status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Execute Command - Certificate Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command - Auth Logs": {
      "main": [
        [
          {
            "node": "Code - Combine Security Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command - Fail2ban Status": {
      "main": [
        [
          {
            "node": "Code - Combine Security Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command - Certificate Check": {
      "main": [
        [
          {
            "node": "Code - Combine Security Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code - Combine Security Data": {
      "main": [
        [
          {
            "node": "AI Agent - Ganesha Security",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent - Ganesha Security": {
      "main": [
        [
          {
            "node": "Telegram - Security Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "tags": [],
  "meta": {
    "description": "Workflow for the Ganesha Security Agent",
    "templateCredsSetupCompleted": true
  }
}
